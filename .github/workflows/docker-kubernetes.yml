name: Docker Push-Deploy

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: piss-server
  KUBECONFIG: ${{ secrets.KUBECONFIG }}


jobs:
  build-java-app:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v1
      with:
        java-version: 21
    - name: Build with Maven - Client
      run: mvn -B package --file client/pom.xml
    - name: Build with Maven - Server
      run: mvn -B package --file server/pom.xml
    - name: Save new repo as artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: ./

  test-docker-image:
    needs: [ build-java-app ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: ./
    - name: Build Docker image
      run: docker build -t "piss-server" .
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'piss-server'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL'

  push-docker-image:
    needs: [ test-docker-image]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: ./
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build Docker image
      run: docker build -t "piss-server" .
    - name: Docker Tag
      run: docker tag "piss-server" ${{ secrets.DOCKERHUB_USERNAME }}"/piss-server"
    - name: Docker Push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}"/piss-server"

  deploy-to-kubernetes:
    needs: [ push-docker-image]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install and setup kubectl
      uses: azure/setup-kubectl@v1
    - name: Replace image in the Kubernetes deployment file
      run: |
        sed -i 's|your-container:.*|your-container:${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest|' ./kubernetes/aks-deployment.yml
    - name: Load kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
    - name: Deploy to Kubernetes
      run: |
        kubectl --kubeconfig kubeconfig.yaml apply -f ./kubernetes/aks-deployment.yml
    - name: Start Load balancer
      run: |
        kubectl --kubeconfig kubeconfig.yaml apply -f ./kubernetes/aks-service.yml
    - name: Get IP
      run: |
        kubectl --kubeconfig kubeconfig.yaml get service piss-server-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'